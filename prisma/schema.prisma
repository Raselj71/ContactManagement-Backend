// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  email        String        @unique
  passwordHash String
  profile      Profile?

  userContacts UserContact[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  userId          String        @unique @db.ObjectId
  user            User          @relation(fields: [userId], references: [id])
  firstName       String
  lastName        String
  otherEmails     String[]
  initialContacts PhoneAlias[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

type PhoneAlias {
  phone String
  alias String
}

model Contact {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  phoneNumber     String
  normalizedPhone String        @unique
  createdAt       DateTime      @default(now())

  userContacts    UserContact[]

  
}

model UserContact {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  userId    String  @db.ObjectId
  contactId String  @db.ObjectId

  alias   String
  labels  String[]
  notes   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User?    @relation(fields: [userId], references: [id])
  contact Contact? @relation(fields: [contactId], references: [id])

  @@unique([userId, contactId])
  @@index([userId, alias])
  @@index([contactId])
}